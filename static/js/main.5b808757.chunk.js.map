{"version":3,"sources":["Nav.js","Province.js","Indonesia.js","Gobal.js","CountryDetail.js","App.js","serviceWorker.js","index.js"],"names":["Nav","navStyle","textDecoration","className","style","to","Province","cname","cdate","totc","totd","totr","data-aos","data-aos-duration","Indonesia","AOS","init","useState","provinces","setProvinces","a","fetch","response","json","data","console","log","Countries","useEffect","getProvinces","map","province","Country","key","Date","substr","TotalConfirmed","TotalDeaths","TotalRecovered","Gobal","Data","setData","Global","CountryDetail","match","country","setCountry","params","getCountry","data-aos-delay","cases","casesPerOneMillion","critical","deaths","deathsPerOneMillion","recovered","testsPerOneMillion","totalTests","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5b808757.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Nav.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Nav() {\r\n    const navStyle = {\r\n        textDecoration: 'none'\r\n    }\r\n    return (\r\n        <nav className=\"navigation\">\r\n            <h1>CovidTracker</h1>\r\n            <ul>\r\n                <Link style={navStyle} to=\"/covidtrackerappp/\">\r\n                <li >Global</li>\r\n                </Link>\r\n                <Link style={navStyle} to=\"/covidtrackerappp/countries\">\r\n                <li>Countries</li>\r\n                </Link>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react';\r\nimport './Province.css';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\nfunction Province({cname, cdate, totc, totd, totr}) {\r\n    return (\r\n        <div data-aos=\"fade-right\" data-aos-duration=\"500\" className=\"province\">\r\n            <div className=\"province_contents\">\r\n                <h1 className=\"province_title\">{cname}</h1>\r\n                <p>{cdate}</p>\r\n                <p>{totc}</p>\r\n                <p>{totd}</p>\r\n                <p>{totr}</p>\r\n                <ArrowForwardIosIcon className=\"Arrow\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Province","import React, {useState, useEffect} from 'react';\r\nimport './Indonesia.css';\r\nimport Province from './Province';\r\nimport {Link} from 'react-router-dom';\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css';\r\n\r\nfunction Indonesia() {\r\n    AOS.init({})\r\n    const navStyle = {\r\n        textDecoration: \"none\"\r\n    }\r\n\r\n    const [provinces, setProvinces] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        getProvinces();\r\n    }, [])\r\n\r\n    async function getProvinces(){\r\n        const response = await fetch(\"https://api.covid19api.com/summary\")\r\n        const data = await response.json();\r\n        console.log(data);\r\n        setProvinces(data.Countries);\r\n    };\r\n\r\n    return (\r\n        <div className=\"Indonesia\">\r\n            <h1 className=\"Countries_title\">by Country</h1>\r\n            <div data-aos=\"fade-right\" data-aos-duration=\"500\" className=\"col\">\r\n                <p className=\"col_cont\">Country</p>\r\n                <p className=\"col_dat\">Date</p>\r\n                <p className=\"col_det\">Total Confirmed</p>\r\n                <p className=\"col_col\">Total Deaths</p>\r\n                <p className=\"col_col\">Total Recovered</p>\r\n            </div>\r\n            <div className=\"container\">\r\n                {provinces.map(province =>(\r\n                    <Link to={`/covidtrackerappp/countries/${province.Country}`} style={navStyle}>\r\n                    <Province\r\n                    key={province.Country}\r\n                    cname={province.Country}\r\n                    cdate={province.Date.substr(0, 10)}\r\n                    totc={province.TotalConfirmed}\r\n                    totd={province.TotalDeaths}\r\n                    totr={province.TotalRecovered}\r\n                    />\r\n                    </Link>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Indonesia;\r\n","import React, {useState, useEffect} from 'react';\r\nimport './Gobal.css';\r\n\r\nfunction Gobal() {\r\n    const [Data, setData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        getProvinces();\r\n    }, [])\r\n  \r\n    async function getProvinces(){\r\n        const response = await fetch(\"https://api.covid19api.com/summary\")\r\n        const data = await response.json();\r\n        console.log(data.Global);\r\n        setData(data.Global);\r\n    };\r\n    return (\r\n        <div className=\"Gobal\">\r\n            <h1 className=\"hometitle\">The Covid19 World Count</h1>\r\n            <div className=\"gobal_status\">\r\n            <p className=\"totalconf\">Total Confirmed: {Data.TotalConfirmed}</p>\r\n            <p className=\"totaldeat\">Total Deaths: {Data.TotalDeaths}</p>\r\n            <p className=\"totalreco\">Total Recovered: {Data.TotalRecovered}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gobal\r\n","import React, {useState, useEffect} from 'react';\r\nimport './CountryDetail.css';\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css';\r\n\r\nfunction CountryDetail({match}) {\r\n\r\n    AOS.init({})\r\n    const [country, setCountry] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        getCountry();\r\n    }, [])\r\n\r\n    async function getCountry(){\r\n        const response = await fetch(`https://coronavirus-19-api.herokuapp.com/countries/${match.params.key}`)\r\n        const data = await response.json();\r\n        console.log(data);\r\n        setCountry(data);\r\n    };\r\n\r\n    return (\r\n        <div className=\"Country_Detail\">\r\n            <div className=\"title_container\">\r\n            <h1 data-aos=\"fade-right\" data-aos-duration=\"500\" className=\"Back-btn\">Countries /</h1>\r\n            <h1 data-aos=\"fade-right\" data-aos-duration=\"500\" className=\"Cty-btn\">{country.country}</h1>\r\n            </div>\r\n            <div className=\"data_container\">\r\n                <div data-aos=\"fade-right\" data-aos-duration=\"500\" data-aos-delay=\"100\" className=\"data_containerSet\">\r\n                    <p>Cases: </p>\r\n                    <p>{country.cases}</p>\r\n                </div>\r\n                <div data-aos=\"fade-right\" data-aos-duration=\"500\" data-aos-delay=\"100\" className=\"data_containerSet\">\r\n                    <p>Cases Per Million: </p>\r\n                    <p>{country.casesPerOneMillion}</p>\r\n                </div>\r\n                <div data-aos=\"fade-right\" data-aos-duration=\"500\" data-aos-delay=\"100\" className=\"data_containerSet\">\r\n                    <p>Critical: </p>\r\n                    <p>{country.critical}</p>\r\n                </div>\r\n                <div data-aos=\"fade-right\" data-aos-duration=\"500\" data-aos-delay=\"100\" className=\"data_containerSet\">\r\n                    <p>Deaths: </p>\r\n                    <p>{country.deaths}</p>\r\n                </div>\r\n                <div data-aos=\"fade-right\" data-aos-duration=\"500\" data-aos-delay=\"100\" className=\"data_containerSet\">\r\n                    <p>Deaths Per Million: </p>\r\n                    <p>{country.deathsPerOneMillion}</p>\r\n                </div>\r\n                <div data-aos=\"fade-right\" data-aos-duration=\"500\" data-aos-delay=\"100\" className=\"data_containerSet\">\r\n                    <p>Recovered: </p>\r\n                    <p>{country.recovered}</p>\r\n                </div>\r\n                <div data-aos=\"fade-right\" data-aos-duration=\"500\" data-aos-delay=\"100\" className=\"data_containerSet\">\r\n                    <p>Tests Per Million: </p>\r\n                    <p>{country.testsPerOneMillion}</p>\r\n                </div>\r\n                <div data-aos=\"fade-right\" data-aos-duration=\"500\" data-aos-delay=\"100\" className=\"data_containerSet\">\r\n                    <p>Total Tests: </p>\r\n                    <p>{country.totalTests}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CountryDetail;","import React from 'react';\nimport './App.css';\nimport Nav from './Nav';\nimport Indonesia from './Indonesia';\nimport Gobal from './Gobal';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport CountryDetail from './CountryDetail';\n\nfunction App() {\n\n  return (\n    <Router>\n    <div className=\"App\">\n      <Nav/>\n      <Switch>\n        <Route path=\"/covidtrackerappp/\" exact component={Gobal}/>\n        <Route path=\"/covidtrackerappp/countries\" exact component={Indonesia}/>\n        <Route path=\"/covidtrackerappp/countries/:key\" component={CountryDetail}/>\n      </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}